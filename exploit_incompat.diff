Index: lib/msf/core/exploit.rb
===================================================================
--- lib/msf/core/exploit.rb	(revision 7526)
+++ lib/msf/core/exploit.rb	(working copy)
@@ -712,7 +713,48 @@
 	
 		return payloads;
 	end
+	#
+	# Returns a list of incompatible payloads based on platform, architecture,
+	# and size requirements.
+	#
+	def incompatible_payloads
+		payloads = []
+		
+		c_platform = (target and target.platform) ? target.platform : platform
+		c_arch     = (target and target.arch)     ? target.arch     : (arch == []) ? nil : arch
+		c_arch   ||= [ ARCH_X86 ]
 
+		framework.payloads.each_module(
+			'Platform' => c_platform,
+			'Arch'     => c_arch ) { |name, mod|
+		
+			incompat = false
+			
+			# Are we compatible in terms of conventions and connections and
+			# what not?
+			next if (compatible?(framework.payloads.instance(name)) == false)
+
+			# Skip over payloads that are too big
+			if ((payload_space) and 
+			    (framework.payloads.sizes[name]) and
+			    (framework.payloads.sizes[name] > payload_space))
+				incompat = true
+			end
+
+			# If the payload is privileged but the exploit does not give
+			# privileged access, then it would fail
+			incompat = true if (self.privileged == false and 
+				framework.payloads.instance(name).privileged == true)
+
+			next if(not incompat)
+
+			# This one be compatible!
+			payloads << [ name, mod ]
+	
+		}
+		return payloads;
+	end
+
 	#
 	# Returns a list of compatible encoders based on architecture
 	#
